use macroquad::prelude::*;

pub struct Inputs {
    pub key_down: Vec<bool>,
    pub key_pressed: Vec<bool>,
    pub mouse_pos: (f32, f32),
    pub mouse_wheel: f32,
    pub mouse_pressed: [bool;3],
    pub mouse_released: [bool;3],
    pub mouse_down: [bool;3],
    pub is_screen_size_changed: bool
}

impl Inputs {
    pub fn poll(is_screen_size_changed: bool) -> Self {
        Inputs {
            key_down: get_down_keys(),
            key_pressed: get_pressed_keys(),
            mouse_pos: mouse_position(),
            mouse_wheel: mouse_wheel().1,
            mouse_pressed: [
                is_mouse_button_pressed(MouseButton::Left),
                is_mouse_button_pressed(MouseButton::Middle),
                is_mouse_button_pressed(MouseButton::Right),
            ],
            mouse_released: [
                is_mouse_button_released(MouseButton::Left),
                is_mouse_button_released(MouseButton::Middle),
                is_mouse_button_released(MouseButton::Right),
            ],
            mouse_down: [
                is_mouse_button_down(MouseButton::Left),
                is_mouse_button_down(MouseButton::Middle),
                is_mouse_button_down(MouseButton::Right),
            ],
            is_screen_size_changed
        }
    }
}

pub fn get_down_keys() -> Vec<bool> {
    vec![
        is_key_down(KeyCode::Up),
        is_key_down(KeyCode::Down),
        is_key_down(KeyCode::Left),
        is_key_down(KeyCode::Right),
        is_key_down(KeyCode::RightShift) || is_key_down(KeyCode::LeftShift),
        is_key_down(KeyCode::RightAlt) || is_key_down(KeyCode::LeftAlt),
        is_key_down(KeyCode::RightControl) || is_key_down(KeyCode::LeftControl),
        is_key_down(KeyCode::RightSuper) || is_key_down(KeyCode::LeftSuper),
        is_key_down(KeyCode::Backspace),
        is_key_down(KeyCode::Tab),
        is_key_down(KeyCode::Enter),
        is_key_down(KeyCode::CapsLock),
        is_key_down(KeyCode::Escape),
        is_key_down(KeyCode::F1),
        is_key_down(KeyCode::F2),
        is_key_down(KeyCode::F3),
        is_key_down(KeyCode::F4),
        is_key_down(KeyCode::F5),
        is_key_down(KeyCode::F6),
        is_key_down(KeyCode::F7),
        is_key_down(KeyCode::F8),
        is_key_down(KeyCode::F9),
        is_key_down(KeyCode::F10),
        is_key_down(KeyCode::F11),
        is_key_down(KeyCode::F12),
        is_key_down(KeyCode::Insert),
        is_key_down(KeyCode::Delete),
        is_key_down(KeyCode::Home),
        is_key_down(KeyCode::PageUp),
        is_key_down(KeyCode::PageDown),
        is_key_down(KeyCode::End),
        is_key_down(KeyCode::PrintScreen),
        is_key_down(KeyCode::Space),
        false, false, false, false, false, false,
        is_key_down(KeyCode::Apostrophe),
        false, false, false, false,
        is_key_down(KeyCode::Comma),
        is_key_down(KeyCode::Minus),
        is_key_down(KeyCode::Period),
        is_key_down(KeyCode::Slash),
        is_key_down(KeyCode::Key0),
        is_key_down(KeyCode::Key1),
        is_key_down(KeyCode::Key2),
        is_key_down(KeyCode::Key3),
        is_key_down(KeyCode::Key4),
        is_key_down(KeyCode::Key5),
        is_key_down(KeyCode::Key6),
        is_key_down(KeyCode::Key7),
        is_key_down(KeyCode::Key8),
        is_key_down(KeyCode::Key9),
        false,
        is_key_down(KeyCode::Semicolon),
        false,
        is_key_down(KeyCode::Equal),
        false, false, false, false, false, false, false,
        false, false, false, false, false, false, false,
        false, false, false, false, false, false, false,
        false, false, false, false, false, false, false, false,
        is_key_down(KeyCode::LeftBracket),
        is_key_down(KeyCode::Backslash),
        is_key_down(KeyCode::RightBracket),
        false, false,
        is_key_down(KeyCode::GraveAccent),
        is_key_down(KeyCode::A),
        is_key_down(KeyCode::B),
        is_key_down(KeyCode::C),
        is_key_down(KeyCode::D),
        is_key_down(KeyCode::E),
        is_key_down(KeyCode::F),
        is_key_down(KeyCode::G),
        is_key_down(KeyCode::H),
        is_key_down(KeyCode::I),
        is_key_down(KeyCode::J),
        is_key_down(KeyCode::K),
        is_key_down(KeyCode::L),
        is_key_down(KeyCode::M),
        is_key_down(KeyCode::N),
        is_key_down(KeyCode::O),
        is_key_down(KeyCode::P),
        is_key_down(KeyCode::Q),
        is_key_down(KeyCode::R),
        is_key_down(KeyCode::S),
        is_key_down(KeyCode::T),
        is_key_down(KeyCode::U),
        is_key_down(KeyCode::V),
        is_key_down(KeyCode::W),
        is_key_down(KeyCode::X),
        is_key_down(KeyCode::Y),
        is_key_down(KeyCode::Z),
    ]
}

pub fn get_pressed_keys() -> Vec<bool> {
    vec![
        is_key_pressed(KeyCode::Up),
        is_key_pressed(KeyCode::Down),
        is_key_pressed(KeyCode::Left),
        is_key_pressed(KeyCode::Right),
        is_key_pressed(KeyCode::RightShift) || is_key_pressed(KeyCode::LeftShift),
        is_key_pressed(KeyCode::RightAlt) || is_key_pressed(KeyCode::LeftAlt),
        is_key_pressed(KeyCode::RightControl) || is_key_pressed(KeyCode::LeftControl),
        is_key_pressed(KeyCode::RightSuper) || is_key_pressed(KeyCode::LeftSuper),
        is_key_pressed(KeyCode::Backspace),
        is_key_pressed(KeyCode::Tab),
        is_key_pressed(KeyCode::Enter),
        is_key_pressed(KeyCode::CapsLock),
        is_key_pressed(KeyCode::Escape),
        is_key_pressed(KeyCode::F1),
        is_key_pressed(KeyCode::F2),
        is_key_pressed(KeyCode::F3),
        is_key_pressed(KeyCode::F4),
        is_key_pressed(KeyCode::F5),
        is_key_pressed(KeyCode::F6),
        is_key_pressed(KeyCode::F7),
        is_key_pressed(KeyCode::F8),
        is_key_pressed(KeyCode::F9),
        is_key_pressed(KeyCode::F10),
        is_key_pressed(KeyCode::F11),
        is_key_pressed(KeyCode::F12),
        is_key_pressed(KeyCode::Insert),
        is_key_pressed(KeyCode::Delete),
        is_key_pressed(KeyCode::Home),
        is_key_pressed(KeyCode::PageUp),
        is_key_pressed(KeyCode::PageDown),
        is_key_pressed(KeyCode::End),
        is_key_pressed(KeyCode::PrintScreen),
        is_key_pressed(KeyCode::Space),
        false, false, false, false, false, false,
        is_key_pressed(KeyCode::Apostrophe),
        false, false, false, false,
        is_key_pressed(KeyCode::Comma),
        is_key_pressed(KeyCode::Minus),
        is_key_pressed(KeyCode::Period),
        is_key_pressed(KeyCode::Slash),
        is_key_pressed(KeyCode::Key0),
        is_key_pressed(KeyCode::Key1),
        is_key_pressed(KeyCode::Key2),
        is_key_pressed(KeyCode::Key3),
        is_key_pressed(KeyCode::Key4),
        is_key_pressed(KeyCode::Key5),
        is_key_pressed(KeyCode::Key6),
        is_key_pressed(KeyCode::Key7),
        is_key_pressed(KeyCode::Key8),
        is_key_pressed(KeyCode::Key9),
        false,
        is_key_pressed(KeyCode::Semicolon),
        false,
        is_key_pressed(KeyCode::Equal),
        false, false, false, false, false, false, false,
        false, false, false, false, false, false, false,
        false, false, false, false, false, false, false,
        false, false, false, false, false, false, false, false,
        is_key_pressed(KeyCode::LeftBracket),
        is_key_pressed(KeyCode::Backslash),
        is_key_pressed(KeyCode::RightBracket),
        false, false,
        is_key_pressed(KeyCode::GraveAccent),
        is_key_pressed(KeyCode::A),
        is_key_pressed(KeyCode::B),
        is_key_pressed(KeyCode::C),
        is_key_pressed(KeyCode::D),
        is_key_pressed(KeyCode::E),
        is_key_pressed(KeyCode::F),
        is_key_pressed(KeyCode::G),
        is_key_pressed(KeyCode::H),
        is_key_pressed(KeyCode::I),
        is_key_pressed(KeyCode::J),
        is_key_pressed(KeyCode::K),
        is_key_pressed(KeyCode::L),
        is_key_pressed(KeyCode::M),
        is_key_pressed(KeyCode::N),
        is_key_pressed(KeyCode::O),
        is_key_pressed(KeyCode::P),
        is_key_pressed(KeyCode::Q),
        is_key_pressed(KeyCode::R),
        is_key_pressed(KeyCode::S),
        is_key_pressed(KeyCode::T),
        is_key_pressed(KeyCode::U),
        is_key_pressed(KeyCode::V),
        is_key_pressed(KeyCode::W),
        is_key_pressed(KeyCode::X),
        is_key_pressed(KeyCode::Y),
        is_key_pressed(KeyCode::Z),
    ]
}
